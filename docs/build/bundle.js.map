{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/dom-to-image/src/dom-to-image.js","../../node_modules/file-saver/dist/FileSaver.min.js","../../src/WavenIcon.svelte","../../src/Utils.js","../../src/SpellPreview.svelte","../../src/SpellGenerator.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.42.4' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","(function (global) {\n    'use strict';\n\n    var util = newUtil();\n    var inliner = newInliner();\n    var fontFaces = newFontFaces();\n    var images = newImages();\n\n    // Default impl options\n    var defaultOptions = {\n        // Default is to fail on error, no placeholder\n        imagePlaceholder: undefined,\n        // Default cache bust is false, it will use the cache\n        cacheBust: false\n    };\n\n    var domtoimage = {\n        toSvg: toSvg,\n        toPng: toPng,\n        toJpeg: toJpeg,\n        toBlob: toBlob,\n        toPixelData: toPixelData,\n        impl: {\n            fontFaces: fontFaces,\n            images: images,\n            util: util,\n            inliner: inliner,\n            options: {}\n        }\n    };\n\n    if (typeof module !== 'undefined')\n        module.exports = domtoimage;\n    else\n        global.domtoimage = domtoimage;\n\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options\n     * @param {Function} options.filter - Should return true if passed node should be included in the output\n     *          (excluding node means excluding it's children as well). Not called on the root node.\n     * @param {String} options.bgcolor - color for the background, any valid CSS color value.\n     * @param {Number} options.width - width to be applied to node before rendering.\n     * @param {Number} options.height - height to be applied to node before rendering.\n     * @param {Object} options.style - an object whose properties to be copied to node's style before rendering.\n     * @param {Number} options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\n                defaults to 1.0.\n     * @param {String} options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\n     * @param {Boolean} options.cacheBust - set to true to cache bust by appending the time to the request url\n     * @return {Promise} - A promise that is fulfilled with a SVG image data URL\n     * */\n    function toSvg(node, options) {\n        options = options || {};\n        copyOptions(options);\n        return Promise.resolve(node)\n            .then(function (node) {\n                return cloneNode(node, options.filter, true);\n            })\n            .then(embedFonts)\n            .then(inlineImages)\n            .then(applyOptions)\n            .then(function (clone) {\n                return makeSvgDataUri(clone,\n                    options.width || util.width(node),\n                    options.height || util.height(node)\n                );\n            });\n\n        function applyOptions(clone) {\n            if (options.bgcolor) clone.style.backgroundColor = options.bgcolor;\n\n            if (options.width) clone.style.width = options.width + 'px';\n            if (options.height) clone.style.height = options.height + 'px';\n\n            if (options.style)\n                Object.keys(options.style).forEach(function (property) {\n                    clone.style[property] = options.style[property];\n                });\n\n            return clone;\n        }\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\n     * */\n    function toPixelData(node, options) {\n        return draw(node, options || {})\n            .then(function (canvas) {\n                return canvas.getContext('2d').getImageData(\n                    0,\n                    0,\n                    util.width(node),\n                    util.height(node)\n                ).data;\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image data URL\n     * */\n    function toPng(node, options) {\n        return draw(node, options || {})\n            .then(function (canvas) {\n                return canvas.toDataURL();\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\n     * */\n    function toJpeg(node, options) {\n        options = options || {};\n        return draw(node, options)\n            .then(function (canvas) {\n                return canvas.toDataURL('image/jpeg', options.quality || 1.0);\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image blob\n     * */\n    function toBlob(node, options) {\n        return draw(node, options || {})\n            .then(util.canvasToBlob);\n    }\n\n    function copyOptions(options) {\n        // Copy options to impl options for use in impl\n        if(typeof(options.imagePlaceholder) === 'undefined') {\n            domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;\n        } else {\n            domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;\n        }\n\n        if(typeof(options.cacheBust) === 'undefined') {\n            domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;\n        } else {\n            domtoimage.impl.options.cacheBust = options.cacheBust;\n        }\n    }\n\n    function draw(domNode, options) {\n        return toSvg(domNode, options)\n            .then(util.makeImage)\n            .then(util.delay(100))\n            .then(function (image) {\n                var canvas = newCanvas(domNode);\n                canvas.getContext('2d').drawImage(image, 0, 0);\n                return canvas;\n            });\n\n        function newCanvas(domNode) {\n            var canvas = document.createElement('canvas');\n            canvas.width = options.width || util.width(domNode);\n            canvas.height = options.height || util.height(domNode);\n\n            if (options.bgcolor) {\n                var ctx = canvas.getContext('2d');\n                ctx.fillStyle = options.bgcolor;\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n            }\n\n            return canvas;\n        }\n    }\n\n    function cloneNode(node, filter, root) {\n        if (!root && filter && !filter(node)) return Promise.resolve();\n\n        return Promise.resolve(node)\n            .then(makeNodeCopy)\n            .then(function (clone) {\n                return cloneChildren(node, clone, filter);\n            })\n            .then(function (clone) {\n                return processClone(node, clone);\n            });\n\n        function makeNodeCopy(node) {\n            if (node instanceof HTMLCanvasElement) return util.makeImage(node.toDataURL());\n            return node.cloneNode(false);\n        }\n\n        function cloneChildren(original, clone, filter) {\n            var children = original.childNodes;\n            if (children.length === 0) return Promise.resolve(clone);\n\n            return cloneChildrenInOrder(clone, util.asArray(children), filter)\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneChildrenInOrder(parent, children, filter) {\n                var done = Promise.resolve();\n                children.forEach(function (child) {\n                    done = done\n                        .then(function () {\n                            return cloneNode(child, filter);\n                        })\n                        .then(function (childClone) {\n                            if (childClone) parent.appendChild(childClone);\n                        });\n                });\n                return done;\n            }\n        }\n\n        function processClone(original, clone) {\n            if (!(clone instanceof Element)) return clone;\n\n            return Promise.resolve()\n                .then(cloneStyle)\n                .then(clonePseudoElements)\n                .then(copyUserInput)\n                .then(fixSvg)\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneStyle() {\n                copyStyle(window.getComputedStyle(original), clone.style);\n\n                function copyStyle(source, target) {\n                    if (source.cssText) target.cssText = source.cssText;\n                    else copyProperties(source, target);\n\n                    function copyProperties(source, target) {\n                        util.asArray(source).forEach(function (name) {\n                            target.setProperty(\n                                name,\n                                source.getPropertyValue(name),\n                                source.getPropertyPriority(name)\n                            );\n                        });\n                    }\n                }\n            }\n\n            function clonePseudoElements() {\n                [':before', ':after'].forEach(function (element) {\n                    clonePseudoElement(element);\n                });\n\n                function clonePseudoElement(element) {\n                    var style = window.getComputedStyle(original, element);\n                    var content = style.getPropertyValue('content');\n\n                    if (content === '' || content === 'none') return;\n\n                    var className = util.uid();\n                    clone.className = clone.className + ' ' + className;\n                    var styleElement = document.createElement('style');\n                    styleElement.appendChild(formatPseudoElementStyle(className, element, style));\n                    clone.appendChild(styleElement);\n\n                    function formatPseudoElementStyle(className, element, style) {\n                        var selector = '.' + className + ':' + element;\n                        var cssText = style.cssText ? formatCssText(style) : formatCssProperties(style);\n                        return document.createTextNode(selector + '{' + cssText + '}');\n\n                        function formatCssText(style) {\n                            var content = style.getPropertyValue('content');\n                            return style.cssText + ' content: ' + content + ';';\n                        }\n\n                        function formatCssProperties(style) {\n\n                            return util.asArray(style)\n                                .map(formatProperty)\n                                .join('; ') + ';';\n\n                            function formatProperty(name) {\n                                return name + ': ' +\n                                    style.getPropertyValue(name) +\n                                    (style.getPropertyPriority(name) ? ' !important' : '');\n                            }\n                        }\n                    }\n                }\n            }\n\n            function copyUserInput() {\n                if (original instanceof HTMLTextAreaElement) clone.innerHTML = original.value;\n                if (original instanceof HTMLInputElement) clone.setAttribute(\"value\", original.value);\n            }\n\n            function fixSvg() {\n                if (!(clone instanceof SVGElement)) return;\n                clone.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n                if (!(clone instanceof SVGRectElement)) return;\n                ['width', 'height'].forEach(function (attribute) {\n                    var value = clone.getAttribute(attribute);\n                    if (!value) return;\n\n                    clone.style.setProperty(attribute, value);\n                });\n            }\n        }\n    }\n\n    function embedFonts(node) {\n        return fontFaces.resolveAll()\n            .then(function (cssText) {\n                var styleNode = document.createElement('style');\n                node.appendChild(styleNode);\n                styleNode.appendChild(document.createTextNode(cssText));\n                return node;\n            });\n    }\n\n    function inlineImages(node) {\n        return images.inlineAll(node)\n            .then(function () {\n                return node;\n            });\n    }\n\n    function makeSvgDataUri(node, width, height) {\n        return Promise.resolve(node)\n            .then(function (node) {\n                node.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n                return new XMLSerializer().serializeToString(node);\n            })\n            .then(util.escapeXhtml)\n            .then(function (xhtml) {\n                return '<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">' + xhtml + '</foreignObject>';\n            })\n            .then(function (foreignObject) {\n                return '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + width + '\" height=\"' + height + '\">' +\n                    foreignObject + '</svg>';\n            })\n            .then(function (svg) {\n                return 'data:image/svg+xml;charset=utf-8,' + svg;\n            });\n    }\n\n    function newUtil() {\n        return {\n            escape: escape,\n            parseExtension: parseExtension,\n            mimeType: mimeType,\n            dataAsUrl: dataAsUrl,\n            isDataUrl: isDataUrl,\n            canvasToBlob: canvasToBlob,\n            resolveUrl: resolveUrl,\n            getAndEncode: getAndEncode,\n            uid: uid(),\n            delay: delay,\n            asArray: asArray,\n            escapeXhtml: escapeXhtml,\n            makeImage: makeImage,\n            width: width,\n            height: height\n        };\n\n        function mimes() {\n            /*\n             * Only WOFF and EOT mime types for fonts are 'real'\n             * see http://www.iana.org/assignments/media-types/media-types.xhtml\n             */\n            var WOFF = 'application/font-woff';\n            var JPEG = 'image/jpeg';\n\n            return {\n                'woff': WOFF,\n                'woff2': WOFF,\n                'ttf': 'application/font-truetype',\n                'eot': 'application/vnd.ms-fontobject',\n                'png': 'image/png',\n                'jpg': JPEG,\n                'jpeg': JPEG,\n                'gif': 'image/gif',\n                'tiff': 'image/tiff',\n                'svg': 'image/svg+xml'\n            };\n        }\n\n        function parseExtension(url) {\n            var match = /\\.([^\\.\\/]*?)$/g.exec(url);\n            if (match) return match[1];\n            else return '';\n        }\n\n        function mimeType(url) {\n            var extension = parseExtension(url).toLowerCase();\n            return mimes()[extension] || '';\n        }\n\n        function isDataUrl(url) {\n            return url.search(/^(data:)/) !== -1;\n        }\n\n        function toBlob(canvas) {\n            return new Promise(function (resolve) {\n                var binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n                var length = binaryString.length;\n                var binaryArray = new Uint8Array(length);\n\n                for (var i = 0; i < length; i++)\n                    binaryArray[i] = binaryString.charCodeAt(i);\n\n                resolve(new Blob([binaryArray], {\n                    type: 'image/png'\n                }));\n            });\n        }\n\n        function canvasToBlob(canvas) {\n            if (canvas.toBlob)\n                return new Promise(function (resolve) {\n                    canvas.toBlob(resolve);\n                });\n\n            return toBlob(canvas);\n        }\n\n        function resolveUrl(url, baseUrl) {\n            var doc = document.implementation.createHTMLDocument();\n            var base = doc.createElement('base');\n            doc.head.appendChild(base);\n            var a = doc.createElement('a');\n            doc.body.appendChild(a);\n            base.href = baseUrl;\n            a.href = url;\n            return a.href;\n        }\n\n        function uid() {\n            var index = 0;\n\n            return function () {\n                return 'u' + fourRandomChars() + index++;\n\n                function fourRandomChars() {\n                    /* see http://stackoverflow.com/a/6248722/2519373 */\n                    return ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n                }\n            };\n        }\n\n        function makeImage(uri) {\n            return new Promise(function (resolve, reject) {\n                var image = new Image();\n                image.onload = function () {\n                    resolve(image);\n                };\n                image.onerror = reject;\n                image.src = uri;\n            });\n        }\n\n        function getAndEncode(url) {\n            var TIMEOUT = 30000;\n            if(domtoimage.impl.options.cacheBust) {\n                // Cache bypass so we dont have CORS issues with cached images\n                // Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n                url += ((/\\?/).test(url) ? \"&\" : \"?\") + (new Date()).getTime();\n            }\n\n            return new Promise(function (resolve) {\n                var request = new XMLHttpRequest();\n\n                request.onreadystatechange = done;\n                request.ontimeout = timeout;\n                request.responseType = 'blob';\n                request.timeout = TIMEOUT;\n                request.open('GET', url, true);\n                request.send();\n\n                var placeholder;\n                if(domtoimage.impl.options.imagePlaceholder) {\n                    var split = domtoimage.impl.options.imagePlaceholder.split(/,/);\n                    if(split && split[1]) {\n                        placeholder = split[1];\n                    }\n                }\n\n                function done() {\n                    if (request.readyState !== 4) return;\n\n                    if (request.status !== 200) {\n                        if(placeholder) {\n                            resolve(placeholder);\n                        } else {\n                            fail('cannot fetch resource: ' + url + ', status: ' + request.status);\n                        }\n\n                        return;\n                    }\n\n                    var encoder = new FileReader();\n                    encoder.onloadend = function () {\n                        var content = encoder.result.split(/,/)[1];\n                        resolve(content);\n                    };\n                    encoder.readAsDataURL(request.response);\n                }\n\n                function timeout() {\n                    if(placeholder) {\n                        resolve(placeholder);\n                    } else {\n                        fail('timeout of ' + TIMEOUT + 'ms occured while fetching resource: ' + url);\n                    }\n                }\n\n                function fail(message) {\n                    console.error(message);\n                    resolve('');\n                }\n            });\n        }\n\n        function dataAsUrl(content, type) {\n            return 'data:' + type + ';base64,' + content;\n        }\n\n        function escape(string) {\n            return string.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n        }\n\n        function delay(ms) {\n            return function (arg) {\n                return new Promise(function (resolve) {\n                    setTimeout(function () {\n                        resolve(arg);\n                    }, ms);\n                });\n            };\n        }\n\n        function asArray(arrayLike) {\n            var array = [];\n            var length = arrayLike.length;\n            for (var i = 0; i < length; i++) array.push(arrayLike[i]);\n            return array;\n        }\n\n        function escapeXhtml(string) {\n            return string.replace(/#/g, '%23').replace(/\\n/g, '%0A');\n        }\n\n        function width(node) {\n            var leftBorder = px(node, 'border-left-width');\n            var rightBorder = px(node, 'border-right-width');\n            return node.scrollWidth + leftBorder + rightBorder;\n        }\n\n        function height(node) {\n            var topBorder = px(node, 'border-top-width');\n            var bottomBorder = px(node, 'border-bottom-width');\n            return node.scrollHeight + topBorder + bottomBorder;\n        }\n\n        function px(node, styleProperty) {\n            var value = window.getComputedStyle(node).getPropertyValue(styleProperty);\n            return parseFloat(value.replace('px', ''));\n        }\n    }\n\n    function newInliner() {\n        var URL_REGEX = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n\n        return {\n            inlineAll: inlineAll,\n            shouldProcess: shouldProcess,\n            impl: {\n                readUrls: readUrls,\n                inline: inline\n            }\n        };\n\n        function shouldProcess(string) {\n            return string.search(URL_REGEX) !== -1;\n        }\n\n        function readUrls(string) {\n            var result = [];\n            var match;\n            while ((match = URL_REGEX.exec(string)) !== null) {\n                result.push(match[1]);\n            }\n            return result.filter(function (url) {\n                return !util.isDataUrl(url);\n            });\n        }\n\n        function inline(string, url, baseUrl, get) {\n            return Promise.resolve(url)\n                .then(function (url) {\n                    return baseUrl ? util.resolveUrl(url, baseUrl) : url;\n                })\n                .then(get || util.getAndEncode)\n                .then(function (data) {\n                    return util.dataAsUrl(data, util.mimeType(url));\n                })\n                .then(function (dataUrl) {\n                    return string.replace(urlAsRegex(url), '$1' + dataUrl + '$3');\n                });\n\n            function urlAsRegex(url) {\n                return new RegExp('(url\\\\([\\'\"]?)(' + util.escape(url) + ')([\\'\"]?\\\\))', 'g');\n            }\n        }\n\n        function inlineAll(string, baseUrl, get) {\n            if (nothingToInline()) return Promise.resolve(string);\n\n            return Promise.resolve(string)\n                .then(readUrls)\n                .then(function (urls) {\n                    var done = Promise.resolve(string);\n                    urls.forEach(function (url) {\n                        done = done.then(function (string) {\n                            return inline(string, url, baseUrl, get);\n                        });\n                    });\n                    return done;\n                });\n\n            function nothingToInline() {\n                return !shouldProcess(string);\n            }\n        }\n    }\n\n    function newFontFaces() {\n        return {\n            resolveAll: resolveAll,\n            impl: {\n                readAll: readAll\n            }\n        };\n\n        function resolveAll() {\n            return readAll(document)\n                .then(function (webFonts) {\n                    return Promise.all(\n                        webFonts.map(function (webFont) {\n                            return webFont.resolve();\n                        })\n                    );\n                })\n                .then(function (cssStrings) {\n                    return cssStrings.join('\\n');\n                });\n        }\n\n        function readAll() {\n            return Promise.resolve(util.asArray(document.styleSheets))\n                .then(getCssRules)\n                .then(selectWebFontRules)\n                .then(function (rules) {\n                    return rules.map(newWebFont);\n                });\n\n            function selectWebFontRules(cssRules) {\n                return cssRules\n                    .filter(function (rule) {\n                        return rule.type === CSSRule.FONT_FACE_RULE;\n                    })\n                    .filter(function (rule) {\n                        return inliner.shouldProcess(rule.style.getPropertyValue('src'));\n                    });\n            }\n\n            function getCssRules(styleSheets) {\n                var cssRules = [];\n                styleSheets.forEach(function (sheet) {\n                    try {\n                        util.asArray(sheet.cssRules || []).forEach(cssRules.push.bind(cssRules));\n                    } catch (e) {\n                        console.log('Error while reading CSS rules from ' + sheet.href, e.toString());\n                    }\n                });\n                return cssRules;\n            }\n\n            function newWebFont(webFontRule) {\n                return {\n                    resolve: function resolve() {\n                        var baseUrl = (webFontRule.parentStyleSheet || {}).href;\n                        return inliner.inlineAll(webFontRule.cssText, baseUrl);\n                    },\n                    src: function () {\n                        return webFontRule.style.getPropertyValue('src');\n                    }\n                };\n            }\n        }\n    }\n\n    function newImages() {\n        return {\n            inlineAll: inlineAll,\n            impl: {\n                newImage: newImage\n            }\n        };\n\n        function newImage(element) {\n            return {\n                inline: inline\n            };\n\n            function inline(get) {\n                if (util.isDataUrl(element.src)) return Promise.resolve();\n\n                return Promise.resolve(element.src)\n                    .then(get || util.getAndEncode)\n                    .then(function (data) {\n                        return util.dataAsUrl(data, util.mimeType(element.src));\n                    })\n                    .then(function (dataUrl) {\n                        return new Promise(function (resolve, reject) {\n                            element.onload = resolve;\n                            element.onerror = reject;\n                            element.src = dataUrl;\n                        });\n                    });\n            }\n        }\n\n        function inlineAll(node) {\n            if (!(node instanceof Element)) return Promise.resolve(node);\n\n            return inlineBackground(node)\n                .then(function () {\n                    if (node instanceof HTMLImageElement)\n                        return newImage(node).inline();\n                    else\n                        return Promise.all(\n                            util.asArray(node.childNodes).map(function (child) {\n                                return inlineAll(child);\n                            })\n                        );\n                });\n\n            function inlineBackground(node) {\n                var background = node.style.getPropertyValue('background');\n\n                if (!background) return Promise.resolve(node);\n\n                return inliner.inlineAll(background)\n                    .then(function (inlined) {\n                        node.style.setProperty(\n                            'background',\n                            inlined,\n                            node.style.getPropertyPriority('background')\n                        );\n                    })\n                    .then(function () {\n                        return node;\n                    });\n            }\n        }\n    }\n})(this);\n","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","<script>\r\n\r\nexport let name;\r\nexport let value;\r\nexport let centered = true;\r\n\r\n</script>\r\n{#if centered == true}\r\n    <div class=\"relative flex items-center justify-center w-full h-full text-white bg-center bg-no-repeat bg-contain\" style=\"background-image: url(./img/utils/{name}.png)\">\r\n            <span class=\"font-bold sm:text-xl\">{value}</span>\r\n    </div>\r\n{:else}\r\n    <div class=\"flex text-white h-7\">\r\n        <span class=\"text-lg font-bold\">{value}</span>\r\n        <img class=\"w-7 h-7\" src=\"./img/utils/{name}.png\" alt=\"icon {name}\">\r\n    </div>\r\n{/if}\r\n<style>\r\n    span{\r\n        text-shadow: 1px 1px 1px #000;\r\n    }\r\n</style>","import { writable, get } from 'svelte/store';\r\n\r\n\r\nexport const notif = writable(null);\r\n\r\n\r\nexport function timeConverter(UNIX_timestamp){\r\n    var a = new Date(UNIX_timestamp * 1000);\r\n    var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n    var year = a.getFullYear();\r\n    var month = months[a.getMonth()];\r\n    var date = a.getDate();\r\n    var hour = a.getHours();\r\n    var min = a.getMinutes();\r\n    var sec = a.getSeconds();\r\n    var time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\r\n    return time;\r\n  }\r\n\r\n  let lexiqueClasse = new Object();\r\n  lexiqueClasse[\"eniripsa\"] = [\"Gemme Déphasante\",\"Pinceau Kokoro\",\"Lame Voracius\",\"Ambre Tamashi\",\"Scalpel De L'Apostruker\"]\r\n  lexiqueClasse[\"iop\"] = [\"Flamboyante Kasaï\",\"Bouvaloir Orok\",\"Justelame Brutale\",\"Larmaguedon Spectral\",\"Glaive Stalaktoss\"]\r\n  lexiqueClasse[\"cra\"] = [\"Shiru Shaden\",\"Bunelame\",\"Expingole\",\"Arc Piven\",\"Voldorak Vo\"]\r\n  lexiqueClasse[\"sram\"] = [\"Ken Kartana\",\"Cisaille Orishi\",\"Ecorcheur Shugen\",\"Surin Sourokan\",\"Lame Ouraï\"]\r\n  lexiqueClasse[\"osamodas\"] = [\"Bâton De Berger\",\"Bâton Flaqueux\",\"Bâton Tofu\",\"Bâton Craqueleur\",\"Bâton Prespic\"]\r\n  lexiqueClasse[\"xelor\"] = [\"Aiguille Pikuxala\",\"Synchronisateur Tako\",\"Catalysateur Pramium\",\"Sabliaton Jikan\",\"Régulant Gurpapa\"]\r\n  lexiqueClasse[\"sacrieur\"] = [\"Darde Kan\",\"Bâton Tonfavik\",\"Pilobouli\",\"Ombraden\",\"Gantares Des Cendres\"]\r\n\r\n  export default lexiqueClasse;\r\n\r\n  export let lexiqueGauge = new Object();\r\n  lexiqueGauge[\"pa_pool\"]='<span class=\"spell_icon ticon-pareserve\">'\r\n  lexiqueGauge[\"air_gauge\"]='<span class=\"spell_icon ticon-air\">'\r\n  lexiqueGauge[\"fire_gauge\"]='<span class=\"spell_icon ticon-feu\">'\r\n  lexiqueGauge[\"earth_gauge\"]='<span class=\"spell_icon ticon-terre\">'\r\n  lexiqueGauge[\"water_gauge\"]='<span class=\"spell_icon ticon-eau\">'\r\n  lexiqueGauge[\"neutral_gauge\"]='<span class=\"spell_icon ticon-neutre\">'\r\n\r\n  lexiqueGauge[\"at\"]='<span class=\"comp_icon ticon-at\">'\r\n  lexiqueGauge[\"pm\"]='<span class=\"comp_icon ticon-pm\">'\r\n  lexiqueGauge[\"pv\"]='<span class=\"comp_icon ticon-pv\">'\r\n\r\n  export const lexique = new Map();\r\nlexique.set(/POUPEE DE DATHURA/g,'<span class=\"uppercase text-wavencyan font-bold \">poupée de dathura</span>');\r\nlexique.set(/VOL DU CORBEAU NOIR/g,'<span class=\"uppercase text-wavencyan font-bold \">vol du corbeau noir</span>');\r\nlexique.set(/ESPOIR D'ECHO/g,'<span class=\"uppercase text-wavencyan font-bold \">espoir d\\'écho</span>');\r\nlexique.set(/ESSENCE DU DIEU IOP/g,'<span class=\"uppercase text-wavencyan font-bold \">ESSENCE DU DIEU IOP</span>');\r\nlexique.set(/ORBE D'INHIBITION/g,'<span class=\"uppercase text-wavencyan font-bold \">orbe d\\'inhibition</span>');\r\nlexique.set(/JALOUSIE D'ATCHAM/g,'<span class=\"uppercase text-wavencyan font-bold \">jalousie d\\'atcham</span>');\r\nlexique.set(/SURCHARGE DE BAKARA/g,'<span class=\"uppercase text-wavencyan font-bold \">surcharge de bakara</span>');\r\nlexique.set(/FOLIE DU DARK VLAD/g,'<span class=\"uppercase text-wavencyan font-bold \">folie du dark vlad</span>');\r\nlexique.set(/REPIT D'ALIBERT/g,'<span class=\"uppercase text-wavencyan font-bold \">repit d\\'alibert</span>');\r\nlexique.set(/ECAILLES D'ADAMAÏ/g,'<span class=\"uppercase text-wavencyan font-bold \">écailles d\\'adamaï</span>');\r\nlexique.set(/OMBRES DE JULITH/g,'<span class=\"uppercase text-wavencyan font-bold \">ombres de julith</span>');\r\nlexique.set(/COURSE DE JORIS/g,'<span class=\"uppercase text-wavencyan font-bold \">course de joris</span>');\r\nlexique.set(/BOND DE GOULTARD/g,'<span class=\"uppercase text-wavencyan font-bold \">bond de goultard</span>');\r\nlexique.set(/TRAIT D'EVANGELYNE/g,'<span class=\"uppercase text-wavencyan font-bold \">trait d\\'évangelyne</span>');\r\nlexique.set(/TOFUSMATION/g,'<span class=\"uppercase text-wavencyan font-bold \">tofusmation</span>');\r\nlexique.set(/HYPNOSE DE TOXINE/g,'<span class=\"uppercase text-wavencyan font-bold \">hypnose de toxine</span>');\r\nlexique.set(/ARMURE DES 1001 GRIFFES/g,'<span class=\"uppercase text-wavencyan font-bold \">armures des 1001 griffes</span>');\r\nlexique.set(/ELIACUBE DE NOX/g,'<span class=\"uppercase text-wavencyan font-bold \">éliacube de nox</span>');\r\nlexique.set(/SOUFFLE DE PHAERIS/g,'<span class=\"uppercase text-wavencyan font-bold \">souffle de phaeris</span>');\r\nlexique.set(/RONCES D'AMALIA/g,'<span class=\"uppercase text-wavencyan font-bold \">ronces d\\'amalia</span>');\r\nlexique.set(/FUREUR DE TRISTEPIN/g,'<span class=\"uppercase text-wavencyan font-bold \">fureur de tristepin</span>');\r\nlexique.set(/USH LE TRICHEUR/g,'<span class=\"uppercase text-wavencyan font-bold \">ush le tricheur</span>');\r\nlexique.set(/SOUFFLE DE GROUGALORAGRAN/g,'<span class=\"uppercase text-wavencyan font-bold \">souffle de grougaloragran</span>');\r\nlexique.set(/GEL INSTANTANE/g,'<span class=\"uppercase text-wavencyan font-bold \">gel instantané</span>');\r\nlexique.set(/BOUCLIER DE BUMP/g,'<span class=\"uppercase text-wavencyan font-bold \">bouclier de bump</span>');\r\nlexique.set(/SOIF D'OROPO/g,'<span class=\"uppercase text-wavencyan font-bold \">soif d\\'oropo</span>');\r\nlexique.set(/INGENIOSITE DE FLOPIN/g,'<span class=\"uppercase text-wavencyan font-bold \">ingéniosité de flopin</span>');\r\nlexique.set(/PORTAIL DE YUGO/g,'<span class=\"uppercase text-wavencyan font-bold \">portail de yugo</span>');\r\nlexique.set(/BOMBE/g,'<span class=\"uppercase text-wavencyan font-bold \">bombe</span>');\r\nlexique.set(/PELLE DE RUEL/g,'<span class=\"uppercase text-wavencyan font-bold \">pelle de ruel</span>');\r\nlexique.set(/PRECISION/g,'<span class=\"uppercase text-wavencyan font-bold \">précision</span>');\r\n\r\n\r\nlexique.set(/MIRES PUISSANTES/g,'<span class=\"uppercase text-wavencyan font-bold \">mires puissantes</span>');\r\nlexique.set(/MIRE PUISSANTE/g,'<span class=\"uppercase text-wavencyan font-bold \">mire puissante</span>');\r\nlexique.set(/MIRE DE PROTECTION/g,'<span class=\"uppercase text-wavencyan font-bold \">mire de protection</span>');\r\nlexique.set(/MIRES SOIGNANTES/g,'<span class=\"uppercase text-wavencyan font-bold \">mires soignantes</span>');\r\nlexique.set(/MIRES MOTIVANTES/g,'<span class=\"uppercase text-wavencyan font-bold \">mires motivantes</span>');\r\nlexique.set(/MIRE MOTIVANTES/g,'<span class=\"uppercase text-wavencyan font-bold \">mire motivantes</span>');\r\n\r\nlexique.set(/ARKEÜS/g,'<span class=\"uppercase text-wavencyan font-bold \">arkeüs</span>');\r\nlexique.set(/ARKEUS/g,'<span class=\"uppercase text-wavencyan font-bold \">arkeus</span>');\r\nlexique.set(/MIRES SACREES/g,'<span class=\"uppercase text-wavencyan font-bold \">mires sacrées</span>');\r\nlexique.set(/MIRE SACREE/g,'<span class=\"uppercase text-wavencyan font-bold \">mire sacrée</span>');\r\nlexique.set(/MIRE DE PIERRE/g,'<span class=\"uppercase text-wavencyan font-bold \">mire de pierre</span>');\r\n\r\nlexique.set(/MIRE REPOUSSANTE/g,'<span class=\"uppercase text-wavencyan font-bold \">mire repoussante</span>');\r\n\r\nlexique.set(/MIRE AERIENNE/g,'<span class=\"uppercase text-wavencyan font-bold \">mire aérienne</span>');\r\nlexique.set(/APPARITION/g,'<span class=\"uppercase text-wavencyan font-bold \">apparition</span>');\r\nlexique.set(/SORT/g,'<span class=\"uppercase text-wavencyan font-bold \">sort</span>');\r\nlexique.set(/DEBUT DU TOUR/g,'<span class=\"uppercase text-wavencyan font-bold \">début du tour</span>');\r\nlexique.set(/DEBUT DE TOUR/g,'<span class=\"uppercase text-wavencyan font-bold \">début de tour</span>');\r\n\r\nlexique.set(/réserve/g,'<span>réserve <span class=\"tooltip-icon ticon-pareserve\"></span></span>');\r\n\r\nlexique.set(/HUILEE/g,'<span class=\"uppercase text-wavencyan font-bold \">huilée <span class=\"tooltip-icon ticon-huile\"></span></span>');\r\nlexique.set(/HUILE/g,'<span class=\"uppercase text-wavencyan font-bold \">huilé <span class=\"tooltip-icon ticon-huile\"></span></span>');\r\nlexique.set(/BOUEUX/g,'<span class=\"uppercase text-wavencyan font-bold \">boueux <span class=\"tooltip-icon ticon-boueux\"></span></span>');\r\nlexique.set(/BOUEUSE/g,'<span class=\"uppercase text-wavencyan font-bold \">boueuse </span><span class=\"tooltip-icon ticon-boueux\"></span>');\r\nlexique.set(/MOUILLEE/g,'<span class=\"uppercase text-wavencyan font-bold \">mouillée </span><span class=\"tooltip-icon ticon-mouille\"></span>');\r\nlexique.set(/MOUILLE/g,'<span class=\"uppercase text-wavencyan font-bold \">mouillé <span class=\"tooltip-icon ticon-mouille\"></span></span>');\r\nlexique.set(/EVENTEE/g,'<span class=\"uppercase text-wavencyan font-bold \">eventée </span><span class=\"tooltip-icon ticon-evente\"></span>');\r\nlexique.set(/EVENTE/g,'<span class=\"uppercase text-wavencyan font-bold \">eventé <span class=\"tooltip-icon ticon-evente\"></span></span>');\r\nlexique.set(/ÉVENTÉ/g,'<span class=\"uppercase text-wavencyan font-bold \">éventé <span class=\"tooltip-icon ticon-evente\"></span></span>');\r\nlexique.set(/MOUILLÉ/g,'<span class=\"uppercase text-wavencyan font-bold \">mouillé <span class=\"tooltip-icon ticon-mouille\"></span></span>');\r\n\r\n\r\nlexique.set(/NEUTRE/g,'<span>NEUTRE <span class=\"tooltip-icon ticon-neutre\"></span></span>');\r\nlexique.set(/MIRES/g,'<span class=\"uppercase text-wavencyan font-bold \">mires</span>');\r\nlexique.set(/MIRE/g,'<span class=\"uppercase text-wavencyan font-bold \">mire</span>');\r\nlexique.set(/COMBO/g,'<span class=\"uppercase text-wavencyan font-bold \">combo</span>');\r\nlexique.set(/GELEE/g,'<span class=\"uppercase text-wavencyan font-bold \">gelée</span>');\r\nlexique.set(/GELE/g,'<span class=\"uppercase text-wavencyan font-bold \">gelé</span>');\r\nlexique.set(/COUP DE GRÂCE/g,'<span class=\"uppercase text-wavencyan font-bold \">coup de grâce</span>');\r\nlexique.set(/AUTOUR/g,'<span class=\"uppercase text-wavencyan font-bold \">autour</span>');\r\nlexique.set(/REBOND/g,'<span class=\"uppercase text-wavencyan font-bold \">rebond</span>');\r\nlexique.set(/EXPLOSION/g,'<span class=\"uppercase text-wavencyan font-bold \">explosion</span>');\r\nlexique.set(/DESARME/g,'<span class=\"uppercase text-wavencyan font-bold \">désarme</span>');\r\nlexique.set(/IMMOBILISE/g,'<span class=\"uppercase text-wavencyan font-bold \">immobilise</span>');\r\nlexique.set(/INSAISISSABLE/g,'<span class=\"uppercase text-wavencyan font-bold \">insaisissable</span>');\r\nlexique.set(/ADJACENTE/g,'<span class=\"uppercase text-wavencyan font-bold \">adjacente</span>');\r\nlexique.set(/ADJACENTS/g,'<span class=\"uppercase text-wavencyan font-bold \">adjacents</span>');\r\nlexique.set(/ADJACENT/g,'<span class=\"uppercase text-wavencyan font-bold \">adjacent</span>');\r\nlexique.set(/MEURTRIERE/g,'<span class=\"uppercase text-wavencyan font-bold \">meutrière</span>');\r\nlexique.set(/NOCTURIENS/g,'<span class=\"uppercase text-wavencyan font-bold \">nocturiens</span>');\r\nlexique.set(/NOCTURIEN/g,'<span class=\"uppercase text-wavencyan font-bold \">nocturien</span>');\r\nlexique.set(/SOUTIEN/g,'<span class=\"uppercase text-wavencyan font-bold \">soutien</span>');\r\nlexique.set(/DEPHASAGE/g,'<span class=\"uppercase text-wavencyan font-bold \">déphasage</span>');\r\nlexique.set(/DEPHASEE/g,'<span class=\"uppercase text-wavencyan font-bold \">déphasée</span>');\r\nlexique.set(/DEPHASE/g,'<span class=\"uppercase text-wavencyan font-bold \">déphasé</span>');\r\nlexique.set(/VOL DE VIE/g,'<span class=\"uppercase text-wavencyan font-bold \">vol de vie</span>');\r\nlexique.set(/LABORATOIRE DE FLAMMES/g,'<span class=\"uppercase text-wavencyan font-bold \">laboratoire de flammes</span>');\r\nlexique.set(/LABORATOIRE DE SOIN/g,'<span class=\"uppercase text-wavencyan font-bold \">laboratoire de soin</span>');\r\nlexique.set(/LABORATOIRE DE PHASE/g,'<span class=\"uppercase text-wavencyan font-bold \">laboratoire de phase</span>');\r\nlexique.set(/LABORATOIRE DE NOCTURANCIE/g,'<span class=\"uppercase text-wavencyan font-bold \">laboratoire de nocturancie</span>');\r\nlexique.set(/LABORATOIRES/g,'<span class=\"uppercase text-white font-semibold \">laboratoires</span>');\r\nlexique.set(/LABORATOIRE/g,'<span class=\"uppercase text-white font-semibold \">laboratoire</span>');\r\nlexique.set(/COEURS REGENERANTS/g,'<span class=\"uppercase text-wavencyan font-bold \">coeurs régénérant</span>');\r\nlexique.set(/BOOST METABOLIQUES/g,'<span class=\"uppercase text-wavencyan font-bold \">boost métaboliques</span>');\r\nlexique.set(/RUFUS LE SENSUEL/g,'<span class=\"uppercase text-wavencyan font-bold \">rufus le sensuel</span>');\r\nlexique.set(/ARCONE MORTIS/g,'<span class=\"uppercase text-white font-semibold \">arcone mortis</span>');\r\nlexique.set(/ charge /g,'<span class=\"uppercase text-white font-semibold \"> charge </span>');\r\nlexique.set(/INCIBLABLE/g,'<span class=\"uppercase text-wavencyan font-bold \">inciblable</span>');\r\nlexique.set(/AME SPECTRALES/g,'<span class=\"uppercase text-wavencyan font-bold \">âme spectrales</span>');\r\nlexique.set(/AME SPECTRALE/g,'<span class=\"uppercase text-wavencyan font-bold \">âme spectrale</span>');\r\nlexique.set(/MÊLEE/g,'<span class=\"uppercase text-wavencyan font-bold \">mêlée</span>');\r\nlexique.set(/MELEE/g,'<span class=\"uppercase text-wavencyan font-bold \">mêlée</span>');\r\nlexique.set(/EXPLOSION/g,'<span class=\"uppercase text-wavencyan font-bold \">ecplosion</span>');\r\nlexique.set(/ASSOMME/g,'<span class=\"uppercase text-wavencyan font-bold \">assome</span>');\r\nlexique.set(/AURAS/g,'<span class=\"uppercase text-wavencyan font-bold \">auras</span>');\r\nlexique.set(/AURA/g,'<span class=\"uppercase text-wavencyan font-bold \">aura</span>');\r\nlexique.set(/BOUCLIER/g,'<span class=\"uppercase text-wavencyan font-bold \">bouclier</span>');\r\nlexique.set(/EPEES DE RIPOSTE/g,'<span class=\"uppercase text-wavencyan font-bold \">épées de riposte</span>');\r\nlexique.set(/POINGS VOLANTS/g,'<span class=\"uppercase text-wavencyan font-bold \">poings volants</span>');\r\nlexique.set(/BELATORUS/g,'<span class=\"uppercase text-white font-semibold \"> bélatorus </span>');\r\nlexique.set(/EPEES SANGLANTES/g,'<span class=\"uppercase text-wavencyan font-bold \">épées sanglantes</span>');\r\nlexique.set(/LEGENDARUS/g,'<span class=\"uppercase text-wavencyan font-bold \">légendarus</span>');\r\nlexique.set(/JEUNE BOUFTOU/g,'<span class=\"uppercase text-wavencyan font-bold \">jeune bouftou</span>');\r\nlexique.set(/JEUNE CRAQUELEUR/g,'<span class=\"uppercase text-wavencyan font-bold \">jeune craqueleur</span>');\r\nlexique.set(/JEUNE FLAQUEUX/g,'<span class=\"uppercase text-wavencyan font-bold \">jeune flaqueux</span>');\r\nlexique.set(/JEUNE PRESPIC/g,'<span class=\"uppercase text-wavencyan font-bold \">jeune prespic</span>');\r\nlexique.set(/JEUNE TOFU/g,'<span class=\"uppercase text-wavencyan font-bold \">jeune tofu</span>');\r\nlexique.set(/ELEVAGE/g,'<span class=\"uppercase text-wavencyan font-bold \">élevage</span>');\r\nlexique.set(/MATURITE/g,'<span class=\"uppercase text-wavencyan font-bold \">maturité</span>');\r\nlexique.set(/ATTAQUE/g,'<span class=\"uppercase text-white font-semibold \">attaque</span>');\r\nlexique.set(/PETRIFIE/g,'<span class=\"uppercase text-wavencyan font-bold \">pétrifie</span>');\r\nlexique.set(/AMES DE CORBACS/g,'<span class=\"uppercase text-wavencyan font-bold \">âmes de corbacs</span>');\r\nlexique.set(/AMES DE MARCASSINS/g,'<span class=\"uppercase text-wavencyan font-bold \">âmes de marcassins</span>');\r\nlexique.set(/DRAGONNEUR/g,'<span class=\"uppercase text-wavencyan font-bold \">dragonneur</span>');\r\nlexique.set(/SALE BETE INFAME/g,'<span class=\"uppercase text-wavencyan font-bold \">sale bête infâme</span>');\r\nlexique.set(/AGONIE/g,'<span class=\"uppercase text-wavencyan font-bold \">agonie</span>');\r\nlexique.set(/GARDE DU CORPS/g,'<span class=\"uppercase text-wavencyan font-bold \">garde du corps</span>');\r\nlexique.set(/ECORCHUS PELIS/g,'<span class=\"uppercase text-white font-semibold \">echorchus pelis</span>');\r\nlexique.set(/VIERGE DE FER/g,'<span class=\"uppercase text-wavencyan font-bold \">vierge de fer</span>');\r\nlexique.set(/POINGS TATOUES/g,'<span class=\"uppercase text-wavencyan font-bold \">poings tatoués</span>');\r\nlexique.set(/LAME DU TATOUE/g,'<span class=\"uppercase text-wavencyan font-bold \">lame du tatoué</span>');\r\nlexique.set(/MARTYRICONE/g,'<span class=\"uppercase text-wavencyan font-bold \">martyricone</span>');\r\nlexique.set(/PIEGES/g,'<span class=\"uppercase text-wavencyan font-bold \">pièges</span>');\r\nlexique.set(/PIEGE/g,'<span class=\"uppercase text-wavencyan font-bold \">piège</span>');\r\nlexique.set(/REMBOBINAGE/g,'<span class=\"uppercase text-wavencyan font-bold \">rembobinage</span>');\r\nlexique.set(/MECANISMES/g,'<span class=\"uppercase text-wavencyan font-bold \">mécanismes</span>');\r\nlexique.set(/MECANISME/g,'<span class=\"uppercase text-wavencyan font-bold \">mécanisme</span>');\r\nlexique.set(/MORT/g,'<span class=\"uppercase text-wavencyan font-bold \">mort</span>');\r\nlexique.set(/CRANES REGENERANTS/g,'<span class=\"uppercase text-wavencyan font-bold \">crânes régénérants</span>');\r\nlexique.set(/CRANES EXPLOSIFS/g,'<span class=\"uppercase text-wavencyan font-bold \">crânes explosifs</span>');\r\nlexique.set(/DAGUES PUNITIVES/g,'<span class=\"uppercase text-wavencyan font-bold \">dagues  punitives</span>');\r\nlexique.set(/OMBRE REPOUSSANTE/g,'<span class=\"uppercase text-wavencyan font-bold \">ombre repoussante</span>');\r\nlexique.set(/LE GRAND MORNIFLEUR/g,'<span class=\"uppercase text-wavencyan font-bold \">le grand mornifleur</span>');\r\nlexique.set(/SABLIER VENGEUR/g,'<span class=\"uppercase text-wavencyan font-bold \">sablier vengeur</span>');\r\nlexique.set(/FIN DU TOUR/g,'<span class=\"uppercase text-wavencyan font-bold \">fin du tour</span>');\r\nlexique.set(/SINISTRO EAU/g,'<span class=\"uppercase text-wavencyan font-bold \">sinistro eau</span>');\r\nlexique.set(/SINISTRO TERRE/g,'<span class=\"uppercase text-wavencyan font-bold \">sinistro terre</span>');\r\nlexique.set(/SINISTRO FEU/g,'<span class=\"uppercase text-wavencyan font-bold \">sinistro feu</span>');\r\nlexique.set(/SINISTRO AIR/g,'<span class=\"uppercase text-wavencyan font-bold \">sinistro air</span>');\r\nlexique.set(/SINISTRO NEUTRE/g,'<span class=\"uppercase text-wavencyan font-bold \">sinistro neutre</span>');\r\nlexique.set(/SINISTROS/g,'<span class=\"uppercase text-white font-semibold \">sinistros</span>');\r\nlexique.set(/SINISTRO/g,'<span class=\"uppercase text-wavencyan font-bold \">sinistro</span>');\r\nlexique.set(/COUCOU/g,'<span class=\"uppercase text-wavencyan font-bold \">coucou</span>');\r\nlexique.set(/CADRAN DE XELOR/g,'<span class=\"uppercase text-wavencyan font-bold \">cadran de xelor</span>');\r\nlexique.set(/CATALYSEUR TEMPOREL/g,'<span class=\"uppercase text-wavencyan font-bold \">catalyseur temporel</span>');\r\nlexique.set(/SABLIERS VENGEURS/g,'<span class=\"uppercase text-wavencyan font-bold \">sabliers vengeurs</span>');\r\nlexique.set(/CHIBI CADRANS/g,'<span class=\"uppercase text-wavencyan font-bold \">chibi cadrans</span>');\r\nlexique.set(/SARCOPHAGUS/g,'<span class=\"uppercase text-wavencyan font-bold \">sarcophagus</span>');\r\nlexique.set(/MOMIFICATUS/g,'<span class=\"uppercase text-wavencyan font-bold \">momificatus</span>');\r\nlexique.set(/BL/g,'<span class=\"uppercase text-white font-semibold \">bl <span class=\"tooltip-icon ticon-bl\"></span></span>');\r\nlexique.set(/PV/g,'<span class=\"uppercase text-white font-semibold \">pv <span class=\"tooltip-icon ticon-pv\"></span> </span>');\r\nlexique.set(/AR/g,'<span class=\"uppercase text-white font-semibold \">ar <span class=\"tooltip-icon ticon-ar\"></span> </span>');\r\nlexique.set(/AT/g,'<span class=\"uppercase text-white font-semibold \">at <span class=\"tooltip-icon ticon-at\"></span></span>');\r\nlexique.set(/PA/g,'<span class=\"uppercase text-white font-semibold \">pa <span class=\"tooltip-icon ticon-pa\"></span> </span>');\r\nlexique.set(/PM/g,'<span class=\"uppercase text-white font-semibold \">pm <span class=\"tooltip-icon ticon-pm\"></span> </span>');\r\nlexique.set(/FEU/g,'<span>FEU <span class=\"tooltip-icon ticon-feu\"></span></span>');\r\nlexique.set(/TERRE/g,'<span>TERRE <span class=\"tooltip-icon ticon-terre\"></span></span>');\r\nlexique.set(/AIR/g,'<span>AIR <span class=\"tooltip-icon ticon-air\"></span></span>');\r\nlexique.set(/EAU/g,'<span>EAU <span class=\"tooltip-icon ticon-eau\"></span></span>');\r\n\r\n\r\n","<script>\r\n    import domtoimage from 'dom-to-image';\r\n    import { saveAs } from 'file-saver';\r\n    import WavenIcon from \"./WavenIcon.svelte\";\r\n    export let spellTitle = \"Un Titre\"\r\n    export let spellDesc = \"Inflige 11 dégats.\\nConfère autant d'AR  à votre héros.\"\r\n    import {lexique} from \"./Utils.js\";\r\n\r\n    export let cost =0\r\n    export let simage =0\r\n    let asGauges\r\n    \r\n    export let gauges = {\r\n    'air':1,\r\n    'terre':0,\r\n    'eau':0,\r\n    'feu':0,\r\n    'neutre':0\r\n    }\r\n\r\n    export let stype = \"air\"\r\n\r\n    function testGauges(gauges) {\r\n        var counter = 0\r\n        for (const [key, value] of Object.entries(gauges)){\r\n            if(value > 0) {\r\n                counter += 1\r\n            }\r\n        }\r\n        return counter != 0\r\n    }\r\n\r\n$: asGauges= testGauges(gauges)\r\n$: spellDesc = createDsc(spellDesc)\r\n$: console.log(spellTitle) \r\n\r\nfunction createDsc(desc){\r\n        desc = desc.replaceAll(\"\\\\n\",\"<br>\")\r\n        for (const entry of lexique.entries()) {\r\n            desc = desc.replaceAll(entry[0],entry[1])\r\n        }\r\n        return desc\r\n    }\r\n\r\nfunction dl(){\r\n    console.log(\"ok\")\r\n    domtoimage.toBlob(document.getElementById('spell'))\r\n    .then(function (blob) {\r\n        saveAs(blob, 'my-spell.png');\r\n    });\r\n}\r\n\r\n</script>\r\n\r\n\r\n<div id=\"spell\" class=\"flex items-center justify-center w-full \">\r\n    <div class=\"relative w-40 h-40 \">\r\n    \r\n        <div style=\"background-image: url('./img/sorts/{simage +1}.png')\" class=\"relative z-10 flex items-center justify-center w-full h-full bg-contain bg-blend-color\">\r\n            <div class=\"relative z-10 my-{stype}  mix-blend-color h-36 w-36 rounded-xl\">\r\n\r\n            </div>\r\n\r\n            <div class=\"absolute top-0 left-0 z-40 flex items-center justify-center w-10 h-10 text-2xl font-bold text-white bg-center bg-no-repeat bg-contain textb\" style=\"background-image: url('./img/utils/pa.png')\">\r\n                {cost}\r\n            </div>\r\n        </div>\r\n            \r\n    </div>\r\n\r\n    <div class=\"flex flex-col items-center justify-start h-full mr-40 overflow-hidden rounded-xl\">\r\n        <div class=\"relative flex flex-col items-center justify-start w-full pt-1 pb-4 font-bold text-white uppercase bg-gray-500 rounded-t-xl\">\r\n            {spellTitle}\r\n\r\n            <div class=\"absolute flex items-center justify-between px-2 text-white bg-gray-900 rounded-2xl -bottom-3\">\r\n                \r\n                {#if asGauges}\r\n                    {#each Object.entries(gauges) as [name,value]}\r\n\r\n                    {#if value >0}\r\n                    <div class=\"w-7\">\r\n                        <WavenIcon name=\"{name}\" value={value} />\r\n                    </div> \r\n                    {/if}\r\n                   \r\n                      \r\n                    {/each}\r\n                {:else}\r\n                    <div class=\"w-7\">\r\n                        -\r\n                    </div>\r\n                {/if}\r\n            </div>\r\n        </div>\r\n        \r\n        <div class=\"flex items-center max-w-xs px-4 pt-4 pb-4 text-lg text-gray-100 bg-gray-700 \">\r\n            <div>\r\n                {@html spellDesc}\r\n            </div>\r\n           \r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n    \r\n</div>\r\n\r\n<div on:click={dl} class=\"flex items-center justify-center p-4 mt-10 text-4xl font-bold text-gray-900 capitalize bg-yellow-600 border-4 border-yellow-700 cursor-pointer rounded-2xl hover:text-white\">\r\n    Télécharger l'image\r\n</div>\r\n\r\n<style>\r\n .textb{\r\n    -webkit-text-stroke: 1px black;\r\n }\r\n\r\n .my-air{\r\n     background-color: purple;\r\n }\r\n .my-terre{\r\n     background-color: green;\r\n    \r\n }\r\n\r\n .my-feu{\r\n     background-color: red;\r\n }\r\n\r\n .my-eau{\r\n     background-color:CornflowerBlue ;\r\n }\r\n\r\n .my-neutre{\r\n     background-color:goldenrod;\r\n }\r\n</style>","<script>\r\nimport SpellPreview from \"./SpellPreview.svelte\";\r\n\r\n\r\nlet stypes = ['air','terre','eau','feu','neutre'];\r\nlet spellTitle = \"Un titre de sort\"\r\n\r\nlet spellDesc = \"Inflige 11 dégats.\\nConfère autant d'AR  à votre héros.\"\r\n\r\nlet cost = 0;\r\nlet gauges = {\r\n    'air':0,\r\n    'terre':0,\r\n    'eau':0,\r\n    'feu':0,\r\n    'neutre':0\r\n}\r\n\r\nlet stype = \"air\"\r\n\r\nvar n = 164;\r\nvar images = [...Array(n).keys()];\r\nvar simage=0\r\n\r\n$: console.log(gauges)\r\n\r\n$: console.log(spellTitle)\r\n\r\n</script>\r\n\r\n\r\n<div class=\"flex justify-between w-full \">\r\n    <div class=\"flex flex-col items-start justify-between h-auto border-gray-800\">\r\n        <span class=\"mb-4 font-semibold\">Type du sort :</span>\r\n        {#each stypes as elem}\r\n            <label>\r\n                <input type=radio bind:group={stype} value={elem}>\r\n                {elem}\r\n            </label>\r\n        {/each}\r\n    </div>\r\n\r\n\r\n    <div class=\"flex flex-col items-start justify-start h-auto ml-4 border-gray-800\">\r\n        <span class=\"mb-4 font-semibold\">Coût :</span>\r\n       \r\n        <label>\r\n            <input type=\"number\" bind:value={cost} step=\"1\">\r\n            Mana\r\n    </div>\r\n\r\n\r\n    <div class=\"flex flex-col items-start justify-between h-auto ml-4 border-gray-800\">\r\n        <span class=\"font-semibold\">Jauges :</span>\r\n        {#each stypes as elem}\r\n        <label>\r\n            <input type=\"number\" bind:value={gauges[elem]} step=\"1\">\r\n            {elem}\r\n        </label>\r\n        {/each}\r\n    </div>\r\n\r\n    <div class=\"flex flex-col items-start h-auto ml-4 border-gray-800 justify-syart\">\r\n        <span class=\"font-semibold \">Title :</span>\r\n        <label>\r\n            <input class=\"border border-gray-800\" bind:value={spellTitle} type=\"text\" >\r\n            \r\n        </label>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col items-start justify-start h-auto ml-4 border-gray-800\">\r\n        <span class=\"font-semibold\">Description :</span>\r\n        <label>\r\n            <textarea class=\"h-40 border border-gray-800 w-80\" bind:value={spellDesc}></textarea>\r\n        </label>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col items-start justify-start h-auto ml-4 border-gray-800\">\r\n        <span class=\"font-semibold\">Image :</span>\r\n        <select bind:value={simage} >\r\n            {#each images as image}\r\n                <option value={image}>\r\n                    {image}\r\n                </option>\r\n            {/each}\r\n        </select>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n<div class=\"flex flex-col items-center justify-start \">\r\n<SpellPreview spellTitle={spellTitle} gauges={gauges} cost={cost} stype={stype} spellDesc={spellDesc} simage={simage}></SpellPreview>\r\n</div>","<script>\r\nimport SpellGenerator from \"./SpellGenerator.svelte\";\r\nimport SpellPreview from \"./SpellPreview.svelte\";\r\n\r\n\r\n  \r\n</script>\r\n\r\n<main class=\"flex flex-col items-center justify-start w-screen p-4 mx-auto text-center \">\r\n  <h1 class=\"text-6xl font-thin leading-loose text-red-500 uppercase\">\r\n    SpellGen\r\n  </h1>\r\n  <div class=\"flex flex-col justify-center w-3/4 space-y-5 item-center\">\r\n    <SpellGenerator></SpellGenerator>\r\n  </div>\r\n</main>\r\n\r\n<style lang=\"postcss\" global>\r\n  @tailwind base;\r\n  @tailwind components;\r\n  @tailwind utilities;\r\n\r\n  .ticon-feu {\r\n\tbackground-image: url(\"../img/utils/feu.png\");\r\n  }\r\n  .ticon-eau {\r\n\tbackground-image: url(\"../img/utils/eau.png\");\r\n  }\r\n  .ticon-air {\r\n\tbackground-image: url(\"../img/utils/air.png\");\r\n  }\r\n  .ticon-terre {\r\n\tbackground-image: url(\"../img/utils/terre.png\");\r\n  }\r\n  .ticon-neutre {\r\n\tbackground-image: url(\"../img/utils/neutre.png\");\r\n  }\r\n  .ticon-pareserve {\r\n\tbackground-image: url(\"../img/utils/pareserve.png\");\r\n  }\r\n  .ticon-evente {\r\n\tbackground-image: url(\"../img/utils/ico/evente.png\");\r\n  }\r\n  .ticon-boueux {\r\n\tbackground-image: url(\"../img/utils/ico/boueux.png\");\r\n  }\r\n  .ticon-mouille {\r\n\tbackground-image: url(\"../img/utils/ico/mouille.png\");\r\n  }\r\n  .ticon-huile {\r\n\tbackground-image: url(\"../img/utils/ico/huile.png\");\r\n  }\r\n  .ticon-pv {\r\n\tbackground-image: url(\"../img/utils/ico/pv.png\");\r\n  }\r\n  .ticon-ar {\r\n\tbackground-image: url(\"../img/utils/ico/ar.png\");\r\n  }\r\n  .ticon-pm {\r\n\tbackground-image: url(\"../img/utils/ico/pm.png\");\r\n  }\r\n  .ticon-bl {\r\n\tbackground-image: url(\"../img/utils/ico/bl.png\");\r\n  }\r\n  .ticon-pa {\r\n\tbackground-image: url(\"../img/utils/ico/pa.png\");\r\n  }\r\n  .ticon-at {\r\n\tbackground-image: url(\"../img/utils/ico/at.png\");\r\n  }\r\n  \r\n  .tooltip-icon{\r\n\twidth: 20px;\r\n\theight:20px;\r\n\tbackground-repeat: no-repeat;\r\n\tdisplay: table-cell;\r\n\tvertical-align: bottom;\r\n\tbackground-size: 20px 20px;\r\n\t}\r\n</style>\r\n","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\ttarget: document.body,\r\n\t\r\n});\r\n\r\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","select_option","select","option","__value","selected","selectedIndex","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","global","util","escape","string","replace","parseExtension","mimeType","extension","toLowerCase","WOFF","JPEG","woff","woff2","ttf","eot","png","jpg","jpeg","gif","tiff","svg","dataAsUrl","content","isDataUrl","search","canvasToBlob","canvas","toBlob","binaryString","window","atob","toDataURL","split","binaryArray","Uint8Array","charCodeAt","Blob","resolveUrl","baseUrl","doc","implementation","createHTMLDocument","base","head","body","getAndEncode","TIMEOUT","domtoimage","impl","cacheBust","test","Date","getTime","placeholder","request","XMLHttpRequest","onreadystatechange","done","ontimeout","timeout","responseType","open","send","imagePlaceholder","readyState","status","encoder","FileReader","onloadend","result","readAsDataURL","response","fail","message","console","error","uid","fourRandomChars","Math","random","pow","toString","slice","delay","ms","arg","setTimeout","asArray","arrayLike","array","escapeXhtml","makeImage","uri","reject","image","Image","onload","onerror","src","width","leftBorder","px","rightBorder","scrollWidth","height","topBorder","bottomBorder","scrollHeight","match","exec","styleProperty","getComputedStyle","getPropertyValue","parseFloat","newUtil","inliner","URL_REGEX","inlineAll","get","nothingToInline","readUrls","urls","inline","shouldProcess","dataUrl","RegExp","urlAsRegex","newInliner","fontFaces","resolveAll","readAll","webFonts","all","webFont","cssStrings","join","styleSheets","cssRules","sheet","bind","e","log","rule","CSSRule","FONT_FACE_RULE","rules","newWebFont","webFontRule","parentStyleSheet","cssText","newFontFaces","images","Element","inlineBackground","HTMLImageElement","newImage","child","background","inlined","getPropertyPriority","newImages","defaultOptions","undefined","toSvg","toPng","draw","toJpeg","quality","toPixelData","getContext","getImageData","copyOptions","cloneNode","embedFonts","inlineImages","clone","bgcolor","backgroundColor","property","XMLSerializer","serializeToString","xhtml","foreignObject","makeSvgDataUri","domNode","fillStyle","fillRect","newCanvas","drawImage","HTMLCanvasElement","original","cloneChildrenInOrder","parent","childClone","cloneChildren","cloneStyle","clonePseudoElements","copyUserInput","fixSvg","copyStyle","source","copyProperties","clonePseudoElement","className","styleElement","formatPseudoElementStyle","selector","formatCssText","formatCssProperties","formatProperty","HTMLTextAreaElement","innerHTML","HTMLInputElement","SVGElement","SVGRectElement","processClone","styleNode","module","autoBom","warn","g","dispatchEvent","MouseEvent","createEvent","initMouseEvent","f","self","navigator","userAgent","saveAs","HTMLAnchorElement","prototype","h","URL","webkitURL","j","download","rel","origin","location","createObjectURL","revokeObjectURL","msSaveOrOpenBlob","title","innerText","HTMLElement","safari","k","centered","lexiqueClasse","lexiqueGauge","lexique","entries","asGauges","spellTitle","spellDesc","cost","simage","gauges","air","terre","eau","feu","neutre","stype","counter","testGauges","desc","replaceAll","entry","createDsc","getElementById","blob","set","stypes","elem","selected_option","querySelector"],"mappings":"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"}